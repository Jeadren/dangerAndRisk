<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
    <context:component-scan base-package="danger.bean">
	    <context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
	</context:component-scan>  
	
	
	<!-- logout -->
	<bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
		<property name="redirectUrl" value="/login.jsp" />
	</bean>
	
	<!-- web.xml中shiro的filter对应的bean -->
	<!-- Shiro 的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<!-- loginUrl认证提交地址，如果没有认证将会请求此地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证 -->
		<property name="loginUrl" value="/login.action" /><!-- login.action -->
		<!-- 认证成功之后统一跳转到/index.jsp建议不配置，因为shiro认证成功后会自动跳转到上一个请求路径 -->
		<property name="successUrl" value="/first.action"></property><!-- first.action -->
		<!-- 通过unauthorizedUrl指定没有权限操作时的跳转页面 -->
		<property name="unauthorizedUrl" value="/refuse.jsp" />
		<!--自定义filter配置  -->
		<!-- <property name="filters">
			<map>
				将自定义的FormAuthenticationFilter注入到shiroFilter
				<entry key="authc" value-ref="formAuthenticationFilter" />
			</map>
		</property> -->
		
		<property name="filters">
			<map>
				<entry key="logout" value-ref="logoutFilter" />
			</map>
		</property>
		
		<!-- 过虑器链定义，从上向下顺序执行，一般将/**放在最下边 -->
		<property name="filterChainDefinitions">
			<value>
				<!-- 对静态资源设置匿名访问 -->
				/bs/** = anon
				/controls/** = anon
				/css/** = anon
				/image/** = anon
				/images/** = anon
				/js/** = anon
				/META-INF/** = anon
				/refuse.jsp = anon
				/queryView_findDanger2.action = anon
				/login.jsp = anon
				/public/** = anon
				/login.action = authc 
				
				<!-- 请求logout.action地址，shiro会清除session -->
				/logout.action = logout 
				<!-- 必须要认证通过authc通过后才可以访问 -->
				<!-- /** = authc 所有url都必须认证通过才能访问  -->
				/** = authc
				
				<!-- /** = anon 所有url都可以匿名访问 -->
				<!-- /** = anon -->
			</value>
		</property>
	</bean>

	<!-- securityManager -->
	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="customRealm" />
		<!-- 注入缓存管理器 -->
		<property name="cacheManager" ref="cacheManager"></property>
		<!-- 注入session管理器 -->
		<!-- <property name="sessionManager" ref="sessionManager"></property>  -->
	</bean>
	
	<!-- realm -->
	<bean id="customRealm" class="danger.shiro.CustomRealm"></bean>
	
	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="-1" />
	</bean>
	
	
	<!-- 开启aop，对类代理 -->
	<aop:config proxy-target-class="true"></aop:config>
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 ，如果没有这个，就不会进入自定义的realm-->
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	
	
	<!-- 缓存管理器 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
    	<property name="cacheManagerConfigFile" value="classpath:shiro-ehcache.xml"/>
    </bean>
    
    <!-- session会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- session的失效时长，单位毫秒 -->
        <property name="globalSessionTimeout" value="600000"/>
        <!-- 删除失效的session -->
        <property name="deleteInvalidSessions" value="true"/>
    </bean>
    
</beans>